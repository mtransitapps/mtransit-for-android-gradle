name: MT SYNC CODE & DATA # download & parse
on:
  workflow_dispatch: # manual
#   schedule:  TODO
#     cron: 0 0 * * 1 # 0 0 * * MON # WEEKLY
#     # cron: 0 0 * * 1,4 # 0 0 * * MON,THU #BI-WEEKLY
# gh workflow run mt-sync-code-data.yml --ref mmathieum
# gh run list --workflow=mt-sync-code-data.yml
env:
  MT_ORG_GIT_COMMIT_ON: ${{ secrets.MT_ORG_GIT_COMMIT_ON }}
  MT_ORG_GIT_COMMIT_OFF: ${{ secrets.MT_ORG_GIT_COMMIT_OFF }}
  MT_GIT_COMMIT_ON: ${{ secrets.MT_GIT_COMMIT_ON }}
  MT_GIT_COMMIT_OFF: ${{ secrets.MT_GIT_COMMIT_OFF }}
jobs:
  MT-SYNC-CODE-DATA-JOB:
    runs-on: ubuntu-latest
    steps:
      - name: MT check out main repository code (no submodules)
        uses: actions/checkout@v2
        with:
          submodules: true # required to set right token
          token: ${{ secrets.MT_PAT }}
          fetch-depth: 0 # fetch all (not required util release build)
      - name: MT check out submodules
        run: ./checkout_submodules.sh
      - name: MT setup MT_GIT_BRANCH env
        if: github.event_name != 'pull_request'
        run: |
          echo "MT_GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      # - name: MT setup env
      #   run: |
      #     echo "MT_ORG_GIT_COMMIT_ON=${{ secrets.MT_ORG_GIT_COMMIT_ON }}" >> $GITHUB_ENV
      #     echo "MT_ORG_GIT_COMMIT_OFF=${{ secrets.MT_ORG_GIT_COMMIT_OFF }}" >> $GITHUB_ENV
      #     echo "MT_GIT_COMMIT_ON=${{ secrets.MT_GIT_COMMIT_ON }}" >> $GITHUB_ENV
      #     echo "MT_GIT_COMMIT_OFF=${{ secrets.MT_GIT_COMMIT_OFF }}" >> $GITHUB_ENV
      - name: MT code sync
        # if: github.event_name != 'pull_request'
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        run: ./commons/code_sync.sh
      - name: MT code setup
        run: ./commons/code_setup.sh
      # - name: DEBUG GIT PUSH
      #   run: |
      #     git push -v
      #     git submodule foreach git push -v
      - name: MT set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt-hotspot' # 'adopt'
          java-version: '11'
      - name: MT cache > Gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
          key: gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: MT Gradle cache > Generate key
        run: ./init_cache_key.sh
      - name: MT cache > Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
          restore-keys: |
            gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
            gradle-cache-
      - name: MT download dependencies
        run: ./download_dependencies.sh
      - name: MT test
        run: ./test.sh
        env:
          MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      - name: MT artifact > unit tests XML results
        uses: actions/upload-artifact@v2
        if: ${{ always() }} # evern if tests fails
        with:
          name: unit-test-xml-results
          path: |
            */build/test-results/**/*.xml
            */build/test-results/*.xml
            */build/reports/*.xml
      - name: MT artifact > HTML reports
        uses: actions/upload-artifact@v2
        if: ${{ always() }} # evern if tests fails
        with:
          name: html-reports
          path: |
            */build/reports/
            !**/*.xml
      - name: MT commit code change
        run: ./commit_code_change.sh
      - name: MT download & parse
        run: ./download_and_parse.sh
      - name: MT commit data change
        run: ./commit_data_change.sh
      - name: MT assemble release (APK & ABB)
        run: ./assemble_release.sh
        env:
          MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      - name: MT artifact > app-android > APK & ABB
        uses: actions/upload-artifact@v2
        with:
          name: app-android-apk-bundle
          path: |
            app-android/build/outputs/apk
            app-android/build/outputs/bundle
      - name: MT push commits
        run: ./push_commits.sh
      - name: DEBUG GIT STATUS
        run: |
          git status -sb
          git submodule foreach git status -sb
      - name: DEBUG LIST FILES
        run: |
          ls ${{ github.workspace }}
