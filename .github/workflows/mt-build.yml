name: MT build
on:
  workflow_dispatch: # manual
  pull_request:
  push:
    branches:
      - master
      - mmathieum
      - 'feature/**'
      - 'hotfix/**'
# gh workflow run mt-build.yml --ref mmathieum
# gh run list --workflow=mt-build.yml
# gh run watch ; gh browse --branch mmathieum
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.head_ref }}
  cancel-in-progress: true
#env:
#  # git commit & push
#  MT_ORG_GIT_COMMIT_ON: ${{ secrets.MT_ORG_GIT_COMMIT_ON }}
#  MT_ORG_GIT_COMMIT_OFF: ${{ secrets.MT_ORG_GIT_COMMIT_OFF }}
#  MT_GIT_COMMIT_ON: ${{ secrets.MT_GIT_COMMIT_ON }}
#  MT_GIT_COMMIT_OFF: ${{ secrets.MT_GIT_COMMIT_OFF }}
#  # git commit & push > dependency update ONLY
#  MT_ORG_GIT_COMMIT_DEPENDENCY_UPDATE_ON: ${{ secrets.MT_ORG_GIT_COMMIT_DEPENDENCY_UPDATE_ON }}
#  MT_ORG_GIT_COMMIT_DEPENDENCY_UPDATE_OFF: ${{ secrets.MT_ORG_GIT_COMMIT_DEPENDENCY_UPDATE_OFF }}
#  MT_GIT_COMMIT_DEPENDENCY_UPDATE_ON: ${{ secrets.MT_GIT_COMMIT_DEPENDENCY_UPDATE_ON }}
#  MT_GIT_COMMIT_DEPENDENCY_UPDATE_OFF: ${{ secrets.MT_GIT_COMMIT_DEPENDENCY_UPDATE_OFF }}
jobs:
  MT-BUILD-JOB:
    runs-on: ubuntu-latest
    steps:
      - name: MT check out main repository code (no submodules)
        uses: actions/checkout@v3
        with:
          submodules: true # required to set right token
          fetch-depth: 0 # fetch all (not required util release build)
      - name: MT check out submodules
        run: ./checkout_submodules.sh
      - name: MT setup MT_GIT_BRANCH env
        if: github.event_name != 'pull_request'
        run: |
          echo "MT_GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: MT code sync
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        run: ./commons/code_sync.sh
      - name: MT code setup
        run: ./commons/code_setup.sh
      - name: MT set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt-hotspot' # 'adopt'
          java-version: '11'
      - name: MT Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
      - name: MT cache > Gradle wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
          key: gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: MT Gradle cache > Generate key
        run: ./init_cache_key.sh
      - name: MT cache > Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
          key: gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
          restore-keys: |
            gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
            gradle-cache-
      - name: MT download dependencies
        run: ./download_dependencies.sh
      - name: MT test
        run: ./test.sh
        env:
          MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      - name: MT artifact > unit tests XML results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-update-xml-results
          path: |
            build/dependencyUpdates/report.xml
      - name: MT artifact > HTML reports
        uses: actions/upload-artifact@v3
        with:
          name: html-dependency-update-reports
          path: |
            build/dependencyUpdates/report.html
      - name: MT download & parse
        run: ./download_and_parse.sh
      - name: MT assemble release (APK & ABB)
        run: ./assemble_release.sh
        env:
          MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      - name: DEBUG GIT STATUS
        run: |
          git status -sb
          git submodule foreach git status -sb
      - name: DEBUG LIST FILES
        run: |
          ls ${{ github.workspace }}
